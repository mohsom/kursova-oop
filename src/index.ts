import express from 'express';
import cors from 'cors';
import bodyParser from 'body-parser';
import dotenv from 'dotenv';
import { JsonDatabase } from './database/JsonDatabase';
import { UserService } from './models/User';
import { SubscriptionService } from './models/Subscription';
import { SubscriptionPlanService } from './models/SubscriptionPlan';
import { TransactionService } from './models/Transaction';
import { WebhookHandler } from './webhooks/WebhookHandler';
import { createRoutes } from './api/routes';

// –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ environment –∑–º—ñ–Ω–Ω—ñ
dotenv.config();

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π —Ñ–∞–π–ª —Å–µ—Ä–≤–µ—Ä–∞
 */
class Server {
  private app: express.Application;
  private port: number;

  constructor(port?: number) {
    this.app = express();
    this.port = port || parseInt(process.env.PORT || '3001', 10);
    this.initializeDatabase();
    this.initializeMiddleware();
    this.initializeRoutes();
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
   */
  private initializeDatabase(): void {
    console.log('–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...');

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—ó–≤
    const userRepository = new JsonDatabase('users');
    const subscriptionRepository = new JsonDatabase('subscriptions');
    const planRepository = new JsonDatabase('subscription_plans');
    const transactionRepository = new JsonDatabase('transactions');

    // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—ñ–≤
    const userService = new UserService(userRepository);
    const planService = new SubscriptionPlanService(planRepository);
    const subscriptionService = new SubscriptionService(subscriptionRepository, planRepository);
    const transactionService = new TransactionService(transactionRepository);
    const webhookHandler = new WebhookHandler(subscriptionService, transactionService);

    // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–µ—Ä–≤—ñ—Å—ñ–≤ –≤ app locals –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —Ä–æ—É—Ç–∞—Ö
    this.app.locals.userService = userService;
    this.app.locals.planService = planService;
    this.app.locals.subscriptionService = subscriptionService;
    this.app.locals.transactionService = transactionService;
    this.app.locals.webhookHandler = webhookHandler;

    console.log('–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞');
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è middleware
   */
  private initializeMiddleware(): void {
    // CORS
    const corsOptions = {
      origin: process.env.CORS_ORIGIN || 'http://localhost:3000',
      credentials: true
    };
    this.app.use(cors(corsOptions));

    // Body parser
    this.app.use(bodyParser.json());
    this.app.use(bodyParser.urlencoded({ extended: true }));

    // –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–ø–∏—Ç—ñ–≤
    this.app.use((req, res, next) => {
      console.log(`${new Date().toISOString()} - ${req.method} ${req.path}`);
      next();
    });
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ä–æ—É—Ç—ñ–≤
   */
  private initializeRoutes(): void {
    const { userService, planService, subscriptionService, transactionService, webhookHandler } = this.app.locals;

    // API —Ä–æ—É—Ç–∏
    this.app.use('/api', createRoutes(userService, subscriptionService, planService, transactionService, webhookHandler));

    // –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞
    this.app.get('/', (req, res) => {
      res.json({
        message: 'SaaS Subscription Management System',
        version: '1.0.0',
        endpoints: {
          users: '/api/users',
          subscriptions: '/api/subscriptions',
          webhooks: '/api/webhooks'
        }
      });
    });

    // –û–±—Ä–æ–±–∫–∞ –Ω–µ—ñ—Å–Ω—É—é—á–∏—Ö —Ä–æ—É—Ç—ñ–≤
    this.app.use('*', (req, res) => {
      res.status(404).json({
        success: false,
        message: 'Endpoint –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π'
      });
    });
  }

  /**
   * –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
   */
  public start(): void {
    this.app.listen(this.port, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É ${this.port}`);
      console.log(`üì± API –¥–æ—Å—Ç—É–ø–Ω–µ –∑–∞ –∞–¥—Ä–µ—Å–æ—é: http://localhost:${this.port}/api`);
      console.log(`üåê –ì–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞: http://localhost:${this.port}`);
      console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ñ endpoints:');
      console.log('  GET    /api/users                    - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤');
      console.log('  GET    /api/users/:id                 - –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑–∞ ID');
      console.log('  POST   /api/users                     - –°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      console.log('  PUT    /api/users/:id                 - –û–Ω–æ–≤–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      console.log('  DELETE /api/users/:id                 - –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      console.log('  GET    /api/plans                     - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø–ª–∞–Ω–∏ –ø—ñ–¥–ø–∏—Å–æ–∫');
      console.log('  GET    /api/plans/:id                 - –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–ª–∞–Ω –∑–∞ ID');
      console.log('  POST   /api/plans                     - –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–ª–∞–Ω –ø—ñ–¥–ø–∏—Å–∫–∏');
      console.log('  PUT    /api/plans/:id                 - –û–Ω–æ–≤–∏—Ç–∏ –ø–ª–∞–Ω –ø—ñ–¥–ø–∏—Å–∫–∏');
      console.log('  DELETE /api/plans/:id                 - –í–∏–¥–∞–ª–∏—Ç–∏ –ø–ª–∞–Ω');
      console.log('  GET    /api/subscriptions             - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –ø—ñ–¥–ø–∏—Å–∫–∏');
      console.log('  GET    /api/subscriptions/:id         - –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É –∑–∞ ID');
      console.log('  POST   /api/subscriptions             - –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É');
      console.log('  PUT    /api/subscriptions/:id         - –û–Ω–æ–≤–∏—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É');
      console.log('  POST   /api/subscriptions/:id/cancel  - –°–∫–∞—Å—É–≤–∞—Ç–∏ –ø—ñ–¥–ø–∏—Å–∫—É');
      console.log('  GET    /api/users/:userId/subscriptions - –ü—ñ–¥–ø–∏—Å–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      console.log('  GET    /api/transactions             - –û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó');
      console.log('  GET    /api/transactions/:id         - –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é –∑–∞ ID');
      console.log('  POST   /api/transactions             - –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é');
      console.log('  PUT    /api/transactions/:id         - –û–Ω–æ–≤–∏—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é');
      console.log('  POST   /api/transactions/:id/complete - –ó–∞–≤–µ—Ä—à–∏—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é');
      console.log('  POST   /api/transactions/:id/fail    - –ü–æ–∑–Ω–∞—á–∏—Ç–∏ —è–∫ –Ω–µ–≤–¥–∞–ª—É');
      console.log('  GET    /api/transactions/stats       - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π');
      console.log('  GET    /api/users/:userId/transactions - –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞');
      console.log('  GET    /api/subscriptions/:id/transactions - –¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –ø—ñ–¥–ø–∏—Å–∫–∏');
      console.log('  POST   /api/webhooks                  - Webhook –æ–±—Ä–æ–±–∫–∞');
      console.log('  POST   /api/webhooks/test             - –¢–µ—Å—Ç–æ–≤–∏–π webhook');
    });
  }
}

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
const server = new Server();
server.start();
